package ru.grishankov.modpack_creator.core

import ru.grishankov.modpack_creator.config.Configuration
import java.io.File
import java.io.FileOutputStream
import java.util.zip.ZipEntry
import java.util.zip.ZipOutputStream

fun zipFolder(folder: File, outputZip: File, configuration: Configuration) {
    ZipOutputStream(FileOutputStream(outputZip)).use { zipOut ->

        val files = folder.walkTopDown()

        val size = files.count()

        print("\rüìÇ –ê—Ä—Ö–∏–≤–∞—Ü–∏—è...")

        files.forEachIndexed { index, file ->
            if (configuration.isDebug)
                print("\rüìÇ –ê—Ä—Ö–∏–≤–∞—Ü–∏—è... ${index.inc() * 100 / size}%")

            val entryName = file.relativeTo(folder)
                .path.replace("\\", "/") // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å

            if (entryName.isEmpty()) return@forEachIndexed

            if (file.isDirectory) {
                zipOut.putNextEntry(ZipEntry("$entryName/")) // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É
                zipOut.closeEntry()
            } else {
                zipOut.putNextEntry(ZipEntry(entryName))
                file.inputStream().use { it.copyTo(zipOut) }
                zipOut.closeEntry()
            }
        }
    }
    println("\n‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${outputZip.absolutePath}")
}
